\documentclass[rapport.tex]{subfiles}
\begin{document}
\chapter*{\uppercase{Méthodologie de travail}}
\addcontentsline{toc}{chapter}{MÉTHODOLOGIE DE TRAVAIL}
La démarche entreprise par l’équipe de développement pour compléter le projet a été basée sur la combinaison des acquis obtenus dans les projets résolus en stage et au cours du processus universitaire. Toutefois la nature du projet de fin d’études comprend des contraintes et conditions qui ont dû être prises en compte. L’équipe a choisi de travailler sous formes Agile. Cette méthodologie rend le projet plus flexible qu’une méthodologie classique.
\section*{Agile}
\addcontentsline{toc}{section}{Agile}
Afin de pouvoir mener à bien le projet et d’assurer la possibilité de maintenir une flexibilité dans le projet, le choix de la méthodologie Agile s’est avéré évident. En effet, celle-ci prône 4 valeurs fondamentales \citep*{agile}:
\begin{itemize}
\item {Individus et interactions plutôt que processus et outils}
\item {Fonctionnalités opérationnelles plutôt que documentation exhaustive}
\item {Collaboration avec le client plutôt que contractualisation des relations}
\item{Acceptation du changement plutôt que conformité aux plans}
\end{itemize}
Ces valeurs étaient primordiales pour l’équipe. De plus, le principe d’agile consiste en découper le projet en plusieurs étapes appelées “Sprint”. Chacun de ces sprints doit aboutir à la création d’un élément fonctionnel du projet. Le projet a été divisé en quatre sprints distincts et où les sprints comportaient des objectifs, réalisable dans un délai de 3 semaines étaient planifiées. À la fin du sprint, une rétrospective était effectuée afin d’évaluer les accomplissements réalisés pour cette étape. La suite des choses est planifiée en fonction des résultats observés pendant la rétrospective.
\par
En procédant ainsi, il est possible d’ajuster les objectifs du projet et des sprints en fonction de l’avancement en cours.
]section*{Outils de suivi}
\addcontentsline{toc}{section}{Outils de suivi}
\subsection*{Gestion du code}
\addcontentsline{toc}{subsection}{Gestion du code}
Tout le code pour le projet, que ce soit la base fournit par le SDK de Structure Sensor ou l’application de réalité augmentée basé sur le Framework ARKit d’Apple, celui-ci était hébergé sur le site de gestion de code GitHub. En effet, un outil comme GitHub permet de suivre toutes les modifications apportées à chaque ligne de code et de retracer les auteurs des changements à travers le temps. De plus, il permet aussi d’ouvrir des branches afin de développer de nouvelles fonctionnalités en parallèle avec une seconde branche.
\par
Une autre possibilité très intéressante est le fait que le code est public et ouvert à tous, donc un autre développeur peut récupérer l’avancement actuel et continuer le développement puis de proposer d’intégrer ses changements.
\subsection*{Gestion du tâches}
\addcontentsline{toc}{subsection}{Gestion du tâches}
Afin de pouvoir faire une bonne gestion du suivi des tâches, un outil de GitHub a été utilisé. En effet, des issues ont été créées pour chacune des tâches à accomplir. Des catégories ont aussi été définies afin d’y classer chacune des tâches. Par exemple, toutes les tâches à accomplir lors du sprint \#1 ont été placées dans cette catégorie. De plus, l’outil permet d’assigner chacune des tâches à une ou des personnes afin que chacun sache ce qu’il doit accomplir et d’en connaître les détails. 
\par
Une autre fonction pratique est le fait qu’il est possible de lier des sections de code avec la tâche associée afin d’obtenir une meilleure vue globale de ce qui a été accompli.
\end{document}
