@startuml
skinparam style strictuml
hide empty members
actor Utilisateur
boundary Storyboard
control ScannerViewController
control Structure
control AVCaptureDevice
entity EAGLView

Storyboard -> ScannerViewController : viewDidLoad()
ScannerViewController -> EAGLView : init(NSCoder)
ScannerViewController -> Structure : STScene.init(EAGLContext) 
ScannerViewController -> Structure : STTracker.init(STScene, options) 
ScannerViewController -> AVCaptureDevice : init(options)
ScannerViewController -> Structure : STCameraPoseInitializer.init(volumeSizeInMeters, options)
ScannerViewController -> Structure : STCubeRenderer.init(EAGLContext)
ScannerViewController -> Structure : StructureSLAMinit(STScene)
Structure -> ScannerViewController : sensorDidConnect()
Utilisateur -> Storyboard : Show(Scanner)
Storyboard -> ScannerViewController : enterViewingState()
AVCaptureDevice -> ScannerViewController : captureOutput(AVCaptureOutput, CMSampleBuffer, AVCaptureConnection)
ScannerViewController -> Structure : frameSyncNewColorBuffer(CMSampleBuffer)
Structure -> ScannerViewController : sensorDidOutputSynchronizedDepthFrame(STDepthFrame, STColorFrame)
Utilisateur -> Storyboard : TouchUp(scanButton)
Storyboard -> ScannerViewController : scanButtonPressed(UIButton)
ScannerViewController -> ScannerViewController : enterScanningState()
alt Structure is initialized
    ScannerViewController -> ScannerViewController : processDepthFrame(STDepthFrame, STColorFrame)
    alt StructureSLAM.scannerState is Scanning
        ScannerViewController -> Structure : STTracker.updateCameraPose(STDepthFrame, STColorFrame)
        ScannerViewController -> ScannerViewController : computeTrackerMessage()
        alt trackerMessage
            ScannerViewController -> Storyboard : showTrackingMessage(trackerMessage)
        end
        Structure -> ScannerViewController : updateMeshAlphaForPoseAccuracy(STTracker.poseAccuracy)
        alt STTracker.poseAccuracy bigger or equal to accuracy minimum for keyframe
            ScannerViewController -> Structure : STMapper.integrateDepthFrame(depthFrame, cameraPose)
        end
        ScannerViewController -> ScannerViewController : maybeAddKeyframeWithDepthFrame(depthFrame, colorFrame,depthCameraPoseBeforeTracking)
        alt keyframeMessage
            ScannerViewController -> Storyboard : showTrackingMessage(keyframeMessage)
        end
    else StructureSLAM.scanenrState is Viewing
        ScannerViewController -> EAGLView : presentFramebuffer()
    end
    ScannerViewController -> ScannerViewController : renderSceneForDepthFrame(STDepthFrame, STColorFrame)
end
Utilisateur -> Storyboard : TouchUp(doneButton)
Storyboard -> ScannerViewController : doneButtonPressed(UIButton)
ScannerViewController -> ScannerViewController : enterViewingState()
@enduml
